server:
  port: 8003

  contextPath: /auth

spring:
  datasource:
    name: druidDataSource
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      url: jdbc:mysql://database:3306/license?serverTimezone=UTC&allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false
      username: root
      password: root
      filters: stat,wall,slf4j,config #使用默认的logback日志
      max-active: 100   #最大连接数
      initial-size: 1   #初始化连接数
      max-wait: 60000   #获取连接等待超时时间
      min-idle: 1       #最小空闲数
      time-between-eviction-runs-millis: 60000  #检查关闭空闲连接时间，ms
      min-evictable-idle-time-millis: 300000    #连接生存时间，ms
      validation-query: select 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-open-prepared-statements: 50
      max-pool-prepared-statement-per-connection-size: 20

signing:
  key: "345345fsdfsf5345"

eureka:
  instance:
    #true注册服务的IP，而不是服务器名称
    #为什么偏向于IP地址在默认情况下，Eureka在尝试注册服务 ，将会使用主机名让外界与它进行联系。这种方式在基于服务器的环境中运行良好，
    #在这样的环境中，服务 被分配一个DNS支持的主机名。但是，在基于容器的部署（如Docker）中，容器将以随机生成的主机名启动，并且该容器没有DNS记录。
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eurekaserver:8761/eureka/